// <auto-generated />
using System;
using IncidentService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IncidentService.Migrations
{
    [DbContext(typeof(IncidentDbContext))]
    partial class IncidentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("IncidentService.Model.Incident", b =>
                {
                    b.Property<Guid>("IncidentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ClosedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("IncidentStatusId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("OpenedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("ProblemDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("RelatedOrderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Resolution")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IncidentId");

                    b.HasIndex("IncidentStatusId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("IncidentService.Model.IncidentStatus", b =>
                {
                    b.Property<Guid>("IncidentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IncidentStatusId");

                    b.ToTable("IncidentStatuses");
                });

            modelBuilder.Entity("IncidentService.Model.Incident", b =>
                {
                    b.HasOne("IncidentService.Model.IncidentStatus", "IncidentStatus")
                        .WithMany()
                        .HasForeignKey("IncidentStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
